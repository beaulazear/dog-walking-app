{"version":3,"sources":["context/user.js","components/navlinks/PageNavLinks.js","components/navlinks/PageNavLinksNotLoggedIn.js","components/home/HomePage.js","components/home/Login.js","components/home/Signup.js","components/pets/NewPetForm.js","components/appointments/NewAppointmentForm.js","components/appointments/PetAppointmentCard.js","components/pets/PetCard.js","components/pets/PetsPage.js","context/appointments.js","components/appointments/TodaysAppointmentsCard.js","components/appointments/TodaysWalksPage.js","components/invoices/InvoicePetCard.js","components/invoices/InvoicePage.js","components/home/LoggedInHome.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","UserProvider","children","useState","user","setUser","useEffect","fetch","then","response","ok","json","Provider","value","PageNavLinks","useContext","navigate","useNavigate","Navbar","bg","data-bs-theme","Container","Brand","href","Nav","className","Link","onClick","method","PageNavLinksNotLoggedIn","HomePage","Card","Header","as","Body","Title","Text","Login","username","setUsername","password","setPassword","error","setError","Form","onSubmit","e","preventDefault","headers","body","JSON","stringify","errorData","Group","Label","Control","type","placeholder","onChange","target","controlId","Button","variant","length","Alert","Signup","email","setEmail","name","setName","password_confirmation","setPasswordConfirmation","errors","setErrors","email_address","newUser","map","NewPetForm","updateUserPets","address","setAddress","sex","setSex","birthdate","setBirthdate","allergies","setAllergies","suppliesLocation","setSuppliesLocation","behavorialNotes","setbehavorialNotes","spayedOrNeutered","setSpayedOrNeutered","behavorial_notes","supplies_location","spayed_neutered","newPet","classsex","Select","aria-label","NewAppointmentForm","pet","updateAppointmentsNew","recurring","setRecurring","appointmentDate","setAppointmentDate","startTime","setStartTime","endTime","setEndTime","duration","setDuration","monday","setMonday","tuesday","setTuesday","wednesday","setWednesday","thursday","setThursday","friday","setFriday","saturday","setSaturday","sunday","setSunday","console","log","user_id","id","pet_id","start_time","appointment_date","end_time","newApt","PetAppointmentCard","apt","updateAppointmentsDelete","datetimeString","year","slice","month","day","formatDateToYYYYMMDD","extractHourAndMinutes","timestampString","date","Date","hour","String","getUTCHours","padStart","minutes","getUTCMinutes","daysOfWeekArr","push","style","width","Subtitle","join","resp","oldApt","PetCard","updatePetsAfterDelete","formatDate","inputDate","getFullYear","getMonth","getDate","newAptButton","setNewAptButton","appointments","filter","canceled","setAppointments","profilePic","setProfilePic","show","setShow","handleClose","changeAptFormView","newAppointments","Accordion","Item","eventKey","Img","src","profile_pic","ListGroup","formData","FormData","append","res","accept","files","toLowerCase","Modal","onHide","closeButton","Footer","deletedPet","PetsPage","displayFormButton","setDisplayFormButton","pets","setPets","newPets","oldPet","Row","Col","fluid","TodaysAppointmentsContext","TodaysAppointmentsProvider","TodaysAppointmentsCard","updateAppointments","getHourAndMinutes","replaceDateWithToday","timestamp","today","timePart","substr","todayDatePart","toISOString","photoStyles","height","margin","borderRadius","objectFit","invoices","invoice","date_completed","alt","compensation","appointment_id","paid","newInvoice","TodaysWalksPage","todayFormatted","currentDate","toString","getCurrentDateFormatted","InvoicePetCard","setInvoices","currentInvoices","paidInvoices","currentTotal","forEach","InvoicesPage","LoggedInHome","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b326357.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst UserContext = React.createContext();\n\nfunction UserProvider({ children }) {\n    const [user, setUser] = useState(null)\n\n    useEffect(() => {\n        fetch(\"/me\").then((response) => {\n            if (response.ok) {\n                response.json().then((user) => setUser(user));\n            }\n        });\n    }, []);\n\n    return <UserContext.Provider value={{ user, setUser }}>{children}</UserContext.Provider>\n}\n\nexport { UserContext, UserProvider };","import React, { useContext } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\nimport { UserContext } from \"../../context/user\";\n\nexport default function PageNavLinks() {\n\n    const { setUser } = useContext(UserContext)\n\n    const navigate = useNavigate()\n\n    function handleLogout() {\n        fetch(\"/logout\", {\n            method: \"DELETE\",\n        }).then(() => {\n            setUser(null)\n            navigate('/')\n        })\n    }\n\n    return (\n        <>\n            <Navbar bg=\"dark\" data-bs-theme=\"dark\">\n                <Container>\n                    <Navbar.Brand href=\"/loggedinhome\">PocketWalks</Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/petspage\">Pets</Nav.Link>\n                        <Nav.Link href=\"/todayswalkspage\">Today</Nav.Link>\n                        <Nav.Link href=\"/invoicespage\">Invoices</Nav.Link>\n                        <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n        </>\n    );\n\n}","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\n\nexport default function PageNavLinksNotLoggedIn() {\n    return (\n        <>\n            <Navbar bg=\"primary\" data-bs-theme=\"dark\">\n                <Container>\n                    <Navbar.Brand href=\"/\">PocketWalks</Navbar.Brand>\n                    <Nav className=\"me-auto\">\n                        <Nav.Link href=\"/login\">Login</Nav.Link>\n                        <Nav.Link href=\"/signuppage\">Signup</Nav.Link>\n                    </Nav>\n                </Container>\n            </Navbar>\n        </>\n    );\n}","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from 'react-bootstrap/Card';\n\nexport default function HomePage() {\n    return (\n        <>\n            <h1 className=\"display-4 m-3\">Welcome to PocketWalks</h1>\n            <h2 className=\"m-3\">Login or Signup to gain access to the following:</h2>\n            <Card className=\"m-2\">\n                <Card.Header as=\"h5\">Current Pets</Card.Header>\n                <Card.Body>\n                    <Card.Title>Your Own Pet Database</Card.Title>\n                    <Card.Text>\n                        the \"Pets\" page to view, edit, & delete these pets.\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n            <Card className=\"m-2\">\n                <Card.Header as=\"h5\">Appointment Scheduling</Card.Header>\n                <Card.Body>\n                    <Card.Title>Keep track of your pet care appointments</Card.Title>\n                    <Card.Text>\n                        Add, edit, and delete appointments for pets in your database. Gain access to the \"Today\" page to view appointments scheduled for today and mark them as completed as you go. Invoices are created upon completion of appointment.\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n            <Card className=\"m-2\">\n                <Card.Header as=\"h5\">View Invoices</Card.Header>\n                <Card.Body>\n                    <Card.Title>Current and past invoices for all pets</Card.Title>\n                    <Card.Text>\n                        Visit the \"Invoice\" page to view current invoices (unpaid), and past invoices (paid) for each pet in your database.\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </>\n    )\n}\n","import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../../context/user\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function Login() {\n\n    const { setUser } = useContext(UserContext)\n    const navigate = useNavigate()\n\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState([])\n\n    function handleLogin(e) {\n        e.preventDefault()\n        fetch('/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                password\n            })\n        })\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then((user) => {\n                        setUser(user)\n                        navigate('/loggedinhome')\n                    })\n                } else {\n                    response.json().then((errorData) => setError(errorData.error))\n                }\n            })\n    }\n\n    return (\n        <Container className=\"m-3\" >\n            <h1 className=\"display-5\">User Login</h1>\n            <Form onSubmit={handleLogin} className=\"mb-3\">\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control type=\"input\" placeholder=\"Enter username\" value={username} onChange={(e) => { setUsername(e.target.value) }} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n            {error?.length > 0 && (\n                <Alert key={error} variant={'danger'}>\n                    {error}\n                </Alert>\n            )}\n            {/* <ul>\n                {errors.map((error) => (\n                    ))}\n            </ul> */}\n            <Card className=\"bg-light\">\n                <Card.Body>\n                    <Card.Title>Not signed up?</Card.Title>\n                    <Card.Text>\n                        Visit the signup page to create your account.\n                    </Card.Text>\n                    <Button variant=\"primary\" href=\"signuppage\">Signup</Button>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}","import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { UserContext } from \"../../context/user\"; import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function Signup() {\n\n    const { setUser } = useContext(UserContext)\n    const navigate = useNavigate()\n\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [password_confirmation, setPasswordConfirmation] = useState(\"\")\n    const [errors, setErrors] = useState([])\n\n    function handleSignup(e) {\n\n        e.preventDefault()\n        fetch(\"/users\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                username: username,\n                name: name,\n                email_address: email,\n                password: password,\n                password_confirmation: password_confirmation,\n            })\n        })\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then((newUser) => {\n                        setUser(newUser)\n                        navigate('/home')\n                    })\n                } else {\n                    response.json().then((errorData) => setErrors(errorData.errors))\n                }\n            })\n    }\n\n    return (\n        <Container className=\"m-3\">\n            <h1 className=\"display-3\">Create Your Account</h1>\n            <Form onSubmit={handleSignup}>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control onChange={(e) => setUsername(e.target.value)} value={username} type=\"text\" placeholder=\"Enter Username\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" placeholder=\"Enter Email\" />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control onChange={(e) => setName(e.target.value)} value={name} type=\"text\" placeholder=\"Enter Name\" />\n                    <Form.Text className=\"text-muted\">\n                        Please enter your preferred name.\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control onChange={(e) => setPassword(e.target.value)} value={password} type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password Confirmation</Form.Label>\n                    <Form.Control onChange={(e) => setPasswordConfirmation(e.target.value)} value={password_confirmation} type=\"password\" placeholder=\"Password Confirmation\" />\n                </Form.Group>\n                {errors?.length > 0 && (\n                    <ul>\n                        {errors.map((error) => (\n                            <Alert key={error} variant={'danger'}>\n                                {error}\n                            </Alert>))}\n                    </ul>\n                )}\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    )\n}","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function NewPetForm({ updateUserPets }) {\n\n    const [name, setName] = useState(\"\")\n    const [address, setAddress] = useState(\"\")\n    const [sex, setSex] = useState(\"\")\n    const [birthdate, setBirthdate] = useState(\"\")\n    const [allergies, setAllergies] = useState(\"\")\n    const [suppliesLocation, setSuppliesLocation] = useState(\"\")\n    const [behavorialNotes, setbehavorialNotes] = useState(\"\")\n    const [spayedOrNeutered, setSpayedOrNeutered] = useState(false)\n\n    const [errors, setErrors] = useState([])\n\n    function handleNewPet(e) {\n\n        e.preventDefault()\n        fetch(\"/pets\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                name: name,\n                sex: sex,\n                address: address,\n                birthdate: birthdate,\n                allergies: allergies,\n                behavorial_notes: behavorialNotes,\n                supplies_location: suppliesLocation,\n                spayed_neutered: spayedOrNeutered\n            })\n        })\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then((newPet) => {\n                        updateUserPets(newPet)\n                    })\n                } else {\n                    response.json().then((errorData) => setErrors(errorData.errors))\n                }\n            })\n    }\n\n    function updateSpayedOrNeutered(e) {\n        if (e.target.value === \"true\") {\n            setSpayedOrNeutered(true)\n        } else {\n            setSpayedOrNeutered(false)\n        }\n    }\n\n    function updateSex(e) {\n        if (e.target.value === \"Male\") {\n            setSex(\"Male\")\n        } else {\n            setSex(\"Female\")\n        }\n    }\n\n\n    return (\n        <Container className=\"m-3\">\n            <h1 className=\"display-6\">New Pet Form</h1>\n            <Form className=\"text-bg-light p-3\" onSubmit={handleNewPet}>\n                <Form.Group classsex=\"mb-3\">\n                    <Form.Label>Pet's Name</Form.Label>\n                    <Form.Control onChange={(e) => setName(e.target.value)} value={name} type=\"text\" placeholder=\"Enter name\" />\n                </Form.Group>\n                <Form.Group classsex=\"mb-3\" controlId=\"formBasicaddress\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control onChange={(e) => setAddress(e.target.value)} value={address} type=\"text\" placeholder=\"Enter address\" />\n                    <Form.Text classsex=\"text-muted\">\n                        Please enter the address of the pet. Make sure to specify an apartment number if there is one.\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group classsex=\"mb-3\">\n                    <Form.Label>Sex</Form.Label>\n                    <Form.Select onChange={(updateSex)} aria-label=\"Default select example\">\n                        <option>Open this select menu</option>\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>\n                    </Form.Select>\n                </Form.Group>\n                <Form.Group classsex=\"mb-3\">\n                    <Form.Label>Spayed or Neutered?</Form.Label>\n                    <Form.Select onChange={(updateSpayedOrNeutered)} aria-label=\"Default select example\">\n                        <option>Open this select menu</option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                    </Form.Select>\n                </Form.Group>\n                <Form.Group classsex=\"mb-3\" controlId=\"formBasicbirthdate\">\n                    <Form.Label>Birthdate:</Form.Label>\n                    <Form.Control value={birthdate} onChange={(e) => setBirthdate(e.target.value)} type=\"date\">\n\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group classsex=\"mb-3\" controlId=\"formBasicAllergies\">\n                    <Form.Label>Allergies</Form.Label>\n                    <Form.Control onChange={(e) => setAllergies(e.target.value)} value={allergies} type=\"text\" placeholder=\"Does your dog have any known allergies? If not, please type none\" />\n                </Form.Group>\n                <Form.Group classsex=\"mb-3\" controlId=\"formBasicSuppliesLocation\">\n                    <Form.Label>Supplies Location</Form.Label>\n                    <Form.Control onChange={(e) => setSuppliesLocation(e.target.value)} value={suppliesLocation} type=\"text\" placeholder=\"Leash location, treats, etc...\" />\n                </Form.Group>\n                <Form.Group classsex=\"mb-3\" controlId=\"formBasicBehaviorialNotes\">\n                    <Form.Label>Behaviorial Information</Form.Label>\n                    <Form.Control onChange={(e) => setbehavorialNotes(e.target.value)} value={behavorialNotes} type=\"text\" placeholder=\"Leash reactivity, tries to eat trash, etc...\" />\n                </Form.Group>\n                {errors?.length > 0 && (\n                    <ul>\n                        {errors.map((error) => (\n                            <Alert key={error} variant={'danger'}>\n                                {error}\n                            </Alert>))}\n                    </ul>\n                )}\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    )\n}","import React, { useState, useContext } from \"react\";\nimport { UserContext } from \"../../context/user\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from 'react-bootstrap/Container';\nimport Alert from 'react-bootstrap/Alert';\n\nexport default function NewAppointmentForm({ pet, updateAppointmentsNew }) {\n\n    const { user } = useContext(UserContext)\n\n    const [recurring, setRecurring] = useState(false)\n    const [appointmentDate, setAppointmentDate] = useState(\"\")\n    const [startTime, setStartTime] = useState(\"\")\n    const [endTime, setEndTime] = useState(\"\")\n    const [duration, setDuration] = useState(\"\")\n    const [monday, setMonday] = useState(false)\n    const [tuesday, setTuesday] = useState(false)\n    const [wednesday, setWednesday] = useState(false)\n    const [thursday, setThursday] = useState(false)\n    const [friday, setFriday] = useState(false)\n    const [saturday, setSaturday] = useState(false)\n    const [sunday, setSunday] = useState(false)\n\n    const [errors, setErrors] = useState([])\n\n    console.log(startTime)\n\n    function handleNewAppointmentRequest(e) {\n\n        e.preventDefault()\n        fetch(\"/appointments\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                user_id: user.id,\n                pet_id: pet.id,\n                recurring: recurring,\n                start_time: startTime,\n                appointment_date: appointmentDate,\n                end_time: endTime,\n                duration: duration,\n                monday: monday,\n                tuesday: tuesday,\n                wednesday: wednesday,\n                thursday: thursday,\n                friday: friday,\n                saturday: saturday,\n                sunday: sunday,\n            })\n        })\n            .then((response) => {\n                if (response.ok) {\n                    response.json().then((newApt) => {\n                        updateAppointmentsNew(newApt)\n                    })\n                } else {\n                    response.json().then((errorData) => setErrors(errorData.errors))\n                }\n            })\n    }\n\n    return (\n        <Container className=\"m-3\">\n            <h1 className=\"display-6\">New Appointment for {pet.name}</h1>\n            <Form className=\"text-bg-light p-3\" onSubmit={handleNewAppointmentRequest}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicappointmentDate\">\n                    <Form.Label>Start Time</Form.Label>\n                    <Form.Control onChange={(e) => setStartTime(e.target.value)} value={startTime} type=\"time\" />\n                    <Form.Text className=\"text-muted\">\n                        Enter the start time (beginning of pick up window)\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>End Time</Form.Label>\n                    <Form.Control type=\"time\" onChange={(e) => setEndTime(e.target.value)} aria-label=\"Default select example\" />\n                    <Form.Text className=\"text-muted\">\n                        Enter the end time (end of pick up window)\n                    </Form.Text>\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicDuration\">\n                    <Form.Label>Walk Duration</Form.Label>\n                    <Form.Select value={duration} onChange={(e) => setDuration(e.target.value)} type=\"date\">\n                        <option>Open this select menu</option>\n                        <option value=\"30\">30 Minutes</option>\n                        <option value=\"45\">45 Minutes</option>\n                        <option value=\"60\">60 Minutes</option>\n                    </Form.Select>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Is this a recurring walk?</Form.Label>\n                    <Form.Select onChange={(e) => setRecurring(!recurring)} aria-label=\"Default select example\">\n                        <option value={false}>No</option>\n                        <option value={true}>Yes</option>\n                    </Form.Select>\n                </Form.Group>\n                {recurring === false && (\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Appointment Date</Form.Label>\n                        <Form.Control onChange={(e) => setAppointmentDate(e.target.value)} value={appointmentDate} type=\"date\" />\n                    </Form.Group>\n                )}\n                {recurring === true && (\n                    <>\n                        <h3>Please select which days of the week you would like this walk to be repeated.</h3>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Monday</Form.Label>\n                            <Form.Select onChange={(e) => setMonday(!monday)} aria-label=\"Default select example\">\n                                <option value={false}>No</option>\n                                <option value={true}>Yes</option>\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Tuesday</Form.Label>\n                            <Form.Select onChange={(e) => setTuesday(!tuesday)} aria-label=\"Default select example\">\n                                <option value={false}>No</option>\n                                <option value={true}>Yes</option>\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Wednesday</Form.Label>\n                            <Form.Select onChange={(e) => setWednesday(!wednesday)} aria-label=\"Default select example\">\n                                <option value={false}>No</option>\n                                <option value={true}>Yes</option>\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Thursday</Form.Label>\n                            <Form.Select onChange={(e) => setThursday(!thursday)} aria-label=\"Default select example\">\n                                <option value={false}>No</option>\n                                <option value={true}>Yes</option>\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Friday</Form.Label>\n                            <Form.Select onChange={(e) => setFriday(!friday)} aria-label=\"Default select example\">\n                                <option value={false}>No</option>\n                                <option value={true}>Yes</option>\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Saturday</Form.Label>\n                            <Form.Select onChange={(e) => setSaturday(!saturday)} aria-label=\"Default select example\">\n                                <option value={false}>No</option>\n                                <option value={true}>Yes</option>\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label>Sunday</Form.Label>\n                            <Form.Select onChange={(e) => setSunday(!sunday)} aria-label=\"Default select example\">\n                                <option value={false}>No</option>\n                                <option value={true}>Yes</option>\n                            </Form.Select>\n                        </Form.Group>\n                    </>\n                )}\n                {errors?.length > 0 && (\n                    <ul>\n                        {errors.map((error) => (\n                            <Alert key={error} variant={'danger'}>\n                                {error}\n                            </Alert>))}\n                    </ul>\n                )}\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </Container>\n    )\n}","import Card from 'react-bootstrap/Card';\nimport Button from \"react-bootstrap/Button\";\n\nexport default function PetAppointmentCard({ apt, updateAppointmentsDelete }) {\n\n    let datetimeString = apt.appointment_date\n\n    if (datetimeString) {\n\n        function formatDateToYYYYMMDD(datetimeString) {\n            const year = datetimeString.slice(0, 4);\n            const month = datetimeString.slice(5, 7);\n            const day = datetimeString.slice(8, 10);\n            return datetimeString = `${year}-${month}-${day}`;\n        }\n\n        datetimeString = formatDateToYYYYMMDD(datetimeString);\n    }\n\n    function extractHourAndMinutes(timestampString) {\n        const date = new Date(timestampString);\n        const hour = String(date.getUTCHours()).padStart(2, '0');\n        const minutes = String(date.getUTCMinutes()).padStart(2, '0');\n        return `${hour}:${minutes}`;\n    }\n\n    const startTime = extractHourAndMinutes(apt.start_time);\n    const endTime = extractHourAndMinutes(apt.end_time);\n\n    let daysOfWeekArr = []\n\n    if (apt.recurring) {\n        if (apt.monday) {\n            daysOfWeekArr.push(\"Monday\")\n        }\n        if (apt.tuesday) {\n            daysOfWeekArr.push(\"Tuesday\")\n        }\n        if (apt.wednesday) {\n            daysOfWeekArr.push(\"Wednesday\")\n        }\n        if (apt.thursday) {\n            daysOfWeekArr.push(\"Thursday\")\n        }\n        if (apt.friday) {\n            daysOfWeekArr.push(\"Friday\")\n        }\n        if (apt.saturday) {\n            daysOfWeekArr.push(\"Saturday\")\n        }\n        if (apt.sunday) {\n            daysOfWeekArr.push(\"Sunday\")\n        }\n    }\n\n    function handleCancel() {\n        fetch(`/appointments/${apt.id}/canceled`)\n            .then((resp) => resp.json())\n            .then((oldApt) => updateAppointmentsDelete(oldApt))\n    }\n\n    return (\n        <Card className=\"border border-primary\" style={{ width: '100%' }}>\n            <Card.Body>\n                {apt.recurring === true && (\n                    <>\n                        <Card.Title>Recurring Appointment</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Earliest Pickup Time:</b> {startTime} </Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Latest Pickup Time:</b> {endTime} </Card.Subtitle>\n                        <Card.Text>\n                            This walk is to be repeated every {daysOfWeekArr.join(', ')}\n                        </Card.Text>\n                    </>\n                )}\n                {apt.recurring === false && (\n                    <>\n                        <Card.Title>One Time Appointment</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Date:</b> {datetimeString} </Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Earliest Pickup Time:</b> {startTime} </Card.Subtitle>\n                        <Card.Subtitle className=\"mb-2 text-muted\"><b>Latest Pickup Time:</b> {endTime} </Card.Subtitle>\n                        <Card.Text>\n                            This is a one time appointment and will be displayed on the Appointments page on the date of the appointment.\n                        </Card.Text>\n                    </>\n                )}\n                <Button onClick={handleCancel} className=\"btn btn-danger\">Cancel Appointment</Button>\n            </Card.Body>\n        </Card>\n    );\n}\n","import Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Accordion from 'react-bootstrap/Accordion';\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Alert from 'react-bootstrap/Alert';\nimport Modal from 'react-bootstrap/Modal';\nimport NewAppointmentForm from '../appointments/NewAppointmentForm';\nimport PetAppointmentCard from '../appointments/PetAppointmentCard';\n\nexport default function PetCard({ pet, updateUserPets, updatePetsAfterDelete }) {\n\n    function formatDate(inputDate) {\n        const date = new Date(inputDate);\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const day = String(date.getDate()).padStart(2, '0');\n\n        const formattedDate = `${year}-${month}-${day}`;\n        return formattedDate;\n    }\n\n    const [name, setName] = useState(pet.name)\n    const [address, setAddress] = useState(pet.address)\n    const [sex, setSex] = useState(pet.sex)\n    const [birthdate, setBirthdate] = useState(formatDate(pet.birthdate))\n    const [allergies, setAllergies] = useState(pet.allergies)\n    const [suppliesLocation, setSuppliesLocation] = useState(pet.supplies_location)\n    const [behavorialNotes, setbehavorialNotes] = useState(pet.behavorial_notes)\n    const [spayedOrNeutered, setSpayedOrNeutered] = useState(pet.spayed_neutered)\n\n    const [newAptButton, setNewAptButton] = useState(false)\n    const [appointments, setAppointments] = useState(pet.appointments.filter((apt) => apt.canceled !== true))\n\n    const [errors, setErrors] = useState([])\n\n    const [profilePic, setProfilePic] = useState(null)\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n\n    function handleDelete() {\n        fetch(`/pets/${pet.id}`, { method: 'DELETE' })\n            .then((response) => response.json())\n            .then((deletedPet) => {\n                console.log(deletedPet)\n                setShow(false)\n                updatePetsAfterDelete(deletedPet)\n            })\n    }\n\n    function handleUpdatePet(e) {\n\n        e.preventDefault()\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('address', address)\n        formData.append('sex', sex)\n        formData.append('birthdate', birthdate)\n        formData.append('supplies_location', suppliesLocation)\n        formData.append('allergies', allergies)\n        formData.append('behavorial_notes', behavorialNotes)\n        formData.append('profile_pic', profilePic)\n\n        fetch(`/pets/${pet.id}`, {\n            method: 'PATCH',\n            body: formData,\n            headers: {\n            }\n        })\n\n            .then(res => {\n                if (res.ok) {\n                    res.json().then((newPet) => {\n                        updateUserPets(newPet)\n                    })\n                } else {\n                    res.json().then((errorData) => setErrors(errorData.errors))\n                }\n            })\n    }\n\n    function updateSpayedOrNeutered(e) {\n        if (e.target.value === \"true\") {\n            setSpayedOrNeutered(true)\n        } else {\n            setSpayedOrNeutered(false)\n        }\n    }\n\n    function updateSex(e) {\n        if (e.target.value === \"male\") {\n            setSex(\"male\")\n        } else {\n            setSex(\"Female\")\n        }\n    }\n\n    function handleNewAptRequest() {\n        console.log(pet.id)\n        changeAptFormView()\n    }\n\n    function changeAptFormView() {\n        setNewAptButton(!newAptButton)\n    }\n\n    function updateAppointmentsNew(newApt) {\n        setAppointments([...appointments, newApt])\n        changeAptFormView()\n    }\n\n    function updateAppointmentsDelete(oldApt) {\n        const newAppointments = appointments.filter((apt) => apt.id !== oldApt.id)\n        setAppointments(newAppointments)\n    }\n\n    return (\n        <Accordion className='m-3'>\n            <Accordion.Item className=\"text-bg-light p-3\" eventKey=\"0\">\n                <Accordion.Header>{pet.name}, {pet.address}</Accordion.Header>\n                <Accordion.Body>\n                    <Card style={{ width: '100%' }}>\n                        <Card.Img variant=\"top\" src={pet.profile_pic} />\n                        <Card.Body>\n                            <Card.Title>{pet.name}</Card.Title>\n                            <Card.Text>\n                                {pet.address}\n                            </Card.Text>\n                        </Card.Body>\n                        <ListGroup className=\"list-group-flush\">\n                            <ListGroup.Item><b>Sex:</b> {pet.sex}, {pet.spayed_neutered ? \"fixed\" : \"Not fixed\"}</ListGroup.Item>\n                            <ListGroup.Item><b>Supplies:</b> {pet.supplies_location}</ListGroup.Item>\n                            <ListGroup.Item><b>Notes:</b> {pet.behavorial_notes}</ListGroup.Item>\n                            <ListGroup.Item><b>Allergies:</b> {pet.allergies}</ListGroup.Item>\n                            <ListGroup.Item><b>Birthdate:</b> {formatDate(pet.birthdate)}</ListGroup.Item>\n                            <ListGroup.Item><b>Appointments:</b> View and create appointments for {pet.name}</ListGroup.Item>\n                            {appointments.length < 1 && (\n                                <h4 className='display-6 m-3'>There are currently no appointments booked for {pet.name}.</h4>\n                            )}\n                            {appointments?.map((apt) => (\n                                <PetAppointmentCard updateAppointmentsDelete={updateAppointmentsDelete} apt={apt} key={apt.id}>Apt</PetAppointmentCard>\n                            ))}\n                            <Button className='m-4' variant=\"primary\" onClick={handleNewAptRequest}>Create new appointment for {pet.name}</Button>\n                            {newAptButton === true && (\n                                <NewAppointmentForm updateAppointmentsNew={updateAppointmentsNew} pet={pet} />\n                            )}\n                        </ListGroup>\n                    </Card>\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item className=\"text-bg-light p-3\" eventKey=\"1\">\n                <Accordion.Header>Update \"{pet.name}\"</Accordion.Header>\n                <Accordion.Body>\n                    <h3 classsex=\"display-3\">Update information for \"{pet.name}\"</h3>\n                    <Form className=\"text-bg-light p-3\" onSubmit={handleUpdatePet}>\n                        <Form.Group classsex=\"mb-3\">\n                            <Form.Label>Pet's Photo</Form.Label>\n                            <Form.Control\n                                id='file-upload'\n                                type='file' accept='image/*'\n                                onChange={(e) => {\n                                    setProfilePic(e.target.files[0])\n                                }} />\n                            <Form.Label>Pet's Name</Form.Label>\n                            <Form.Control onChange={(e) => setName(e.target.value)} value={name} type=\"text\" placeholder=\"Enter name\" />\n                        </Form.Group>\n                        <Form.Group classsex=\"mb-3\" controlId=\"formBasicaddress\">\n                            <Form.Label>Address</Form.Label>\n                            <Form.Control onChange={(e) => setAddress(e.target.value)} value={address} type=\"text\" placeholder=\"Enter address\" />\n                            <Form.Text classsex=\"text-muted\">\n                                Please enter the address of the pet. Make sure to specify an apartment number if there is one.\n                            </Form.Text>\n                        </Form.Group>\n                        <Form.Group classsex=\"mb-3\">\n                            <Form.Label>Sex</Form.Label>\n                            <Form.Select onChange={(updateSex)} aria-label=\"Default select example\" value={sex.toLowerCase()}>\n                                <option>Open this select menu</option>\n                                <option value=\"male\">Male</option>\n                                <option value=\"female\">Female</option>\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group classsex=\"mb-3\">\n                            <Form.Label>Spayed or Neutered?</Form.Label>\n                            <Form.Select onChange={(updateSpayedOrNeutered)} aria-label=\"Default select example\" value={spayedOrNeutered} >\n                                <option>Open this select menu</option>\n                                <option value=\"true\">Yes</option>\n                                <option value=\"false\">No</option>\n                            </Form.Select>\n                        </Form.Group>\n                        <Form.Group classsex=\"mb-3\" controlId=\"formBasicbirthdate\">\n                            <Form.Label>Birthdate:</Form.Label>\n                            <Form.Control value={birthdate} onChange={(e) => setBirthdate(e.target.value)} type=\"date\">\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group classsex=\"mb-3\" controlId=\"formBasicAllergies\">\n                            <Form.Label>Allergies</Form.Label>\n                            <Form.Control onChange={(e) => setAllergies(e.target.value)} value={allergies} type=\"text\" placeholder=\"Does your dog have any known allergies? If not, please type none\" />\n                        </Form.Group>\n                        <Form.Group classsex=\"mb-3\" controlId=\"formBasicSuppliesLocation\">\n                            <Form.Label>Supplies Location</Form.Label>\n                            <Form.Control onChange={(e) => setSuppliesLocation(e.target.value)} value={suppliesLocation} type=\"text\" placeholder=\"Leash location, treats, etc...\" />\n                        </Form.Group>\n                        <Form.Group classsex=\"mb-3\" controlId=\"formBasicBehaviorialNotes\">\n                            <Form.Label>Behaviorial Information</Form.Label>\n                            <Form.Control onChange={(e) => setbehavorialNotes(e.target.value)} value={behavorialNotes} type=\"text\" placeholder=\"Leash reactivity, tries to eat trash, etc...\" />\n                        </Form.Group>\n                        {errors?.length > 0 && (\n                            <ul>\n                                {errors.map((error) => (\n                                    <Alert key={error} variant={'danger'}>\n                                        {error}\n                                    </Alert>))}\n                            </ul>\n                        )}\n                        <br></br>\n                        <Button className='p-2 m-2' variant=\"primary\" type=\"submit\">Update {pet.name}</Button>\n                        <Button className='p-2 m-2' variant=\"danger\" onClick={handleShow}>Delete {pet.name}</Button>\n                    </Form>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>Delete {pet.name}</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Are you sure you want to delete pet information for {pet.name}? This will also destroy all associated invoices and appointments. This information will not be ale to be recovered after deletion.</Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                            <Button variant=\"danger\" onClick={handleDelete}>Delete {pet.name}</Button>\n                        </Modal.Footer>\n                    </Modal>\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport Button from \"react-bootstrap/Button\"\nimport NewPetForm from \"./NewPetForm\";\nimport PetCard from \"./PetCard\";\n\nexport default function PetsPage() {\n\n    const [displayFormButton, setDisplayFormButton] = useState(false)\n\n    const [pets, setPets] = useState([])\n\n    useEffect(() => {\n        fetch(\"/pets\").then((response) => {\n            if (response.ok) {\n                response.json().then((pets) => {\n                    setPets(pets)\n                });\n            }\n        });\n    }, []);\n\n    function updateDisplayButton() {\n        setDisplayFormButton(!displayFormButton)\n    }\n\n    function addNewPet(newPet) {\n        setPets([...pets, newPet])\n        setDisplayFormButton(false)\n    }\n\n    function updateUserPets(newPet) {\n        const newPets = pets.filter((pet) => pet.id !== newPet.id)\n        setPets([newPet, ...newPets])\n    }\n\n    function updatePetsAfterDelete(oldPet) {\n        const newPets = pets.filter((pet) => pet.id !== oldPet.id)\n        setPets(newPets)\n    }\n\n    if (pets) {\n        return (\n            <Container className=\"m-3\">\n                <Row>\n                    <Col>\n                        <h2 className=\"display-4\">Current Pets</h2>\n                    </Col>\n                    <Col>\n                        <Button className=\"m-2\" variant=\"primary\" onClick={updateDisplayButton}>Create New Pet</Button>\n                    </Col>\n                </Row>\n                <Container className=\"m-3\">\n                    {displayFormButton === true && (\n                        <NewPetForm updateUserPets={addNewPet} />\n                    )}\n                </Container>\n                <Container fluid=\"md\">\n                    {pets.map((pet) => (\n                        <PetCard updatePetsAfterDelete={updatePetsAfterDelete} updateUserPets={updateUserPets} key={pet.id} pet={pet} />\n                    ))}\n                </Container>\n            </Container>\n        )\n    } else {\n        return (\n            <div>...loading</div>\n        )\n    }\n}","import React, { useState, useEffect } from \"react\";\n\nconst TodaysAppointmentsContext = React.createContext();\n\nfunction TodaysAppointmentsProvider({ children }) {\n\n    const [appointments, setAppointments] = useState(null)\n\n    useEffect(() => {\n        fetch(\"/appointments\").then((response) => {\n            if (response.ok) {\n                response.json().then((appointments) => setAppointments(appointments));\n            }\n        });\n    }, []);\n\n    return <TodaysAppointmentsContext.Provider value={{ appointments, setAppointments }}>{children}</TodaysAppointmentsContext.Provider>\n}\n\nexport { TodaysAppointmentsContext, TodaysAppointmentsProvider };","import Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from \"react-bootstrap/Button\";\n\nexport default function TodaysAppointmentsCard({ apt, updateAppointments }) {\n\n    function getHourAndMinutes(timestampString) {\n        const date = new Date(timestampString);\n        const hour = String(date.getUTCHours()).padStart(2, '0');\n        const minutes = String(date.getUTCMinutes()).padStart(2, '0');\n        return `${hour}:${minutes}`;\n    }\n\n    const startTime = getHourAndMinutes(apt.start_time);\n    const endTime = getHourAndMinutes(apt.end_time);\n\n    function replaceDateWithToday(timestamp) {\n        const today = new Date();\n        const timePart = timestamp.substr(11); // Extract time part (HH:mm:ss.sssZ)\n        const todayDatePart = today.toISOString().substr(0, 10); // Get today's date in yyyy-mm-dd format\n\n        return `${todayDatePart}T${timePart}`;\n    }\n\n    const photoStyles = {\n        width: '100px',\n        height: '100px',\n        margin: '15px',\n        borderRadius: '50%',\n        objectFit: 'cover',\n    }\n\n    function handleNewInvoice() {\n\n        let compensation = 0\n\n        if (apt.duration === 30) {\n            compensation = 22\n        } else if (apt.duration === 45) {\n            compensation = 27\n        } else {\n            compensation = 33\n        }\n\n        if (apt.recurring === false) {\n            fetch(`/appointments/${apt.id}/canceled`)\n                .then((resp) => resp.json())\n                .then((oldApt) => console.log(oldApt))\n        }\n\n        fetch('/invoices', {\n            method: 'POST',\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                pet_id: apt.pet.id,\n                appointment_id: apt.id,\n                date_completed: replaceDateWithToday(apt.start_time),\n                paid: false,\n                compensation: compensation\n            })\n        })\n            .then((response) => response.json())\n            .then((newInvoice) => {\n                let newApt = apt\n                newApt.invoices.push(newInvoice)\n                updateAppointments(newApt)\n            })\n    }\n\n    const invoice = apt.invoices.filter((invoice) => invoice.date_completed === replaceDateWithToday(apt.start_time))\n\n    if (invoice.length > 0) {\n        return (\n            <Card className=\"m-3 bg-success\" style={{ width: '100%' }}>\n                <Card.Body>\n                    <img alt=\"Pet associated with appointment\" style={photoStyles} src={apt.pet.profile_pic} />\n                    <Card.Title>{apt.pet.name}, {apt.duration} minute walk between {startTime} & {endTime}.</Card.Title>\n                    <Card.Text className='display-6'>Walk Completed</Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    } else {\n        return (\n            <Card className=\"m-3\" style={{ width: '100%' }}>\n                <Card.Body>\n                    <img alt=\"Pet associated with appointment\" style={photoStyles} src={apt.pet.profile_pic} />\n                    <Card.Title>{apt.pet.name}</Card.Title>\n                    <Card.Text>\n                        {apt.pet.supplies_location}\n                    </Card.Text>\n                    <Card.Text>\n                        {apt.pet.behavorial_notes}\n                    </Card.Text>\n                </Card.Body>\n                <ListGroup className=\"list-group-flush\">\n                    <ListGroup.Item><b>Earliest pick up time:</b> {startTime}</ListGroup.Item>\n                    <ListGroup.Item><b>Latest pick up time:</b> {endTime}</ListGroup.Item>\n                    <ListGroup.Item><b>Address:</b> {apt.pet.address}</ListGroup.Item>\n                    <ListGroup.Item><b>Walk Duration:</b> {apt.duration} minutes</ListGroup.Item>\n                </ListGroup>\n                <Card.Body>\n                    <Button onClick={handleNewInvoice}>Complete Walk</Button>\n                </Card.Body>\n            </Card>\n        )\n    }\n}","import React, { useContext } from \"react\";\nimport { TodaysAppointmentsContext } from \"../../context/appointments\";\nimport Container from \"react-bootstrap/Container\";\nimport TodaysAppointmentsCard from \"./TodaysAppointmentsCard\";\n\nexport default function TodaysWalksPage() {\n\n    const { appointments, setAppointments } = useContext(TodaysAppointmentsContext)\n\n    function getCurrentDateFormatted() {\n        const currentDate = new Date();\n        const year = currentDate.getFullYear();\n        const month = (currentDate.getMonth() + 1).toString().padStart(2, '0');\n        const day = currentDate.getDate().toString().padStart(2, '0');\n\n        const formattedDate = `${year}-${month}-${day}`;\n\n        return formattedDate;\n    }\n\n    function updateAppointments(newApt) {\n        const newAppointments = appointments.filter((apt) => apt.id !== newApt.id)\n        setAppointments([...newAppointments, newApt])\n    }\n\n    const todayFormatted = getCurrentDateFormatted();\n\n    if (appointments?.length > 0) {\n        return (\n            <Container className=\"m-3\">\n                <h2 className=\"display-4\">Today's Appointments</h2>\n                <h4 className=\"display-6\">Current Date: {todayFormatted}</h4>\n                {appointments.map((apt) => (\n                    <TodaysAppointmentsCard updateAppointments={updateAppointments} key={apt.id} apt={apt} />\n                ))}\n            </Container>\n        )\n    } else {\n        return (\n            <Container className=\"m-3\">\n                <h2 className=\"display-4\">Today's Appointments</h2>\n                <Container className=\"display-6\">You currently have no appointments booked</Container>\n            </Container>\n        )\n    }\n}","import Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Accordion from 'react-bootstrap/Accordion';\nimport React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function InvoicePetCard({ pet, updateUserPets }) {\n\n    const [invoices, setInvoices] = useState(pet.invoices)\n\n    let currentInvoices = invoices.filter((invoice) => invoice.paid === false)\n\n    let paidInvoices = invoices.filter((invoice) => invoice.paid === true)\n\n    let currentTotal = 0\n\n    currentInvoices.forEach((invoice) => currentTotal += invoice.compensation)\n\n    function UpdateCurrentInvoice() {\n        currentInvoices.forEach((invoice) => {\n            fetch(`/invoices/${invoice.id}/paid`)\n            .then((response) => response.json())\n            .then((newInvoice) => {\n                paidInvoices.push(newInvoice)\n            })\n        })\n        setInvoices(paidInvoices)\n    }\n\n    return (\n        <Accordion className='m-3'>\n            <Accordion.Item className=\"text-bg-light p-3\" eventKey=\"0\">\n                <Accordion.Header>Current Invoice for {pet.name}</Accordion.Header>\n                <Accordion.Body>\n                    <h3 classsex=\"display-3\">Current Invoice For \"{pet.name}\"</h3>\n                    <Card style={{ width: '100%' }}>\n                        <Card.Img variant=\"top\" src={pet.profile_pic} />\n                        <Card.Body>\n                            <Card.Title>{pet.name}</Card.Title>\n                        </Card.Body>\n                        <ListGroup className=\"list-group-flush\">\n                            {currentInvoices.map((invoice) => (\n                                <ListGroup.Item key={invoice.id}>{invoice.date_completed}, ${invoice.compensation}</ListGroup.Item>\n                            ))}\n                        </ListGroup>\n                        <Card.Text className='m-3'>\n                            <b>Total = ${currentTotal}</b>\n                        </Card.Text>\n                        <Button onClick={UpdateCurrentInvoice}>Paid</Button>\n                    </Card>\n                </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item className=\"text-bg-light p-3\" eventKey=\"1\">\n                <Accordion.Header>Past invoices for {pet.name}</Accordion.Header>\n                <Accordion.Body>\n                    <h3 classsex=\"display-3\">Past Invoices For \"{pet.name}\"</h3>\n                    <ListGroup className=\"list-group-flush\">\n                        {paidInvoices.map((invoice) => (\n                            <ListGroup.Item key={invoice.id}>{invoice.date_completed}, ${invoice.compensation}</ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                </Accordion.Body>\n            </Accordion.Item>\n        </Accordion>\n    );\n}","import React, { useState, useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from 'react-bootstrap/Col';\nimport InvoicePetCard from \"./InvoicePetCard\";\n\nexport default function InvoicesPage() {\n\n    const [pets, setPets] = useState([])\n\n    useEffect(() => {\n        fetch(\"/pets\").then((response) => {\n            if (response.ok) {\n                response.json().then((pets) => {\n                    setPets(pets)\n                });\n            }\n        });\n    }, []);\n\n    if (pets) {\n        return (\n            <Container className=\"m-3\">\n                <Row>\n                    <Col>\n                        <h2 className=\"display-4\">Invoices</h2>\n                    </Col>\n                </Row>\n                <Container fluid=\"md\">\n                    {pets.map((pet) => (\n                        <InvoicePetCard key={pet.id} pet={pet} />\n                    ))}\n                </Container>\n            </Container>\n        )\n    } else {\n        return (\n            <div>...loading</div>\n        )\n    }\n}","import React, { useContext } from \"react\";\nimport { TodaysAppointmentsContext } from \"../../context/appointments\";\nimport { UserContext } from \"../../context/user\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nexport default function LoggedInHome() {\n\n    const { appointments } = useContext(TodaysAppointmentsContext)\n    const { user } = useContext(UserContext)\n\n    return (\n        <>\n            <h1 className=\"display-4 m-3\">Welcome, {user.username}.</h1>\n            <Card className=\"m-2\">\n                <Card.Header as=\"h5\">Today's Schedule</Card.Header>\n                <Card.Body>\n                    {appointments?.length > 0 && (\n                        <Card.Title>You have {appointments?.length} appointments today.</Card.Title>\n                    )}\n                    <Card.Text>\n                        Visit the \"Today\" page to view appointments and mark them as completed as you go.\n                    </Card.Text>\n                    <Button variant=\"primary\" href=\"/todayswalkspage\">Today's Walks</Button>\n                </Card.Body>\n            </Card>\n            <Card className=\"m-2\">\n                <Card.Header as=\"h5\">Current Pets</Card.Header>\n                <Card.Body>\n                    <Card.Title>You have {user.pets?.length} pets in your database!</Card.Title>\n                    <Card.Text>\n                        Visit the \"Pets\" page to view, edit, & delete these pets.\n                    </Card.Text>\n                    <Button variant=\"primary\" href=\"/petspage\">Pets Page</Button>\n                </Card.Body>\n            </Card>\n            <Card className=\"m-2\">\n                <Card.Header as=\"h5\">View Invoices</Card.Header>\n                <Card.Body>\n                    <Card.Title>Current and past invoices for all pets</Card.Title>\n                    <Card.Text>\n                        Visit the \"Invoice\" page to view current invoices (unpaid), and past invoices (paid) for each pet in your database.\n                    </Card.Text>\n                    <Button variant=\"primary\" href=\"/invoicespage\">Invoices Page</Button>\n                </Card.Body>\n            </Card>\n        </>\n    )\n}\n\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"./context/user\";\nimport { Route, Routes } from 'react-router-dom';\nimport PageNavLinks from \"./components/navlinks/PageNavLinks\";\nimport PageNavLinksNotLoggedIn from \"./components/navlinks/PageNavLinksNotLoggedIn\";\nimport HomePage from \"./components/home/HomePage\";\nimport Login from \"./components/home/Login\";\nimport Signup from \"./components/home/Signup\";\nimport PetsPage from \"./components/pets/PetsPage\";\nimport TodaysWalksPage from \"./components/appointments/TodaysWalksPage\";\nimport InvoicesPage from \"./components/invoices/InvoicePage\";\nimport LoggedInHome from \"./components/home/LoggedInHome\";\nimport { TodaysAppointmentsProvider } from './context/appointments';\n\nfunction App() {\n\n  const { user } = useContext(UserContext)\n\n  if (user) {\n    return (\n      <div>\n        <PageNavLinks />\n        <TodaysAppointmentsProvider>\n          <Routes>\n            <Route path=\"/loggedinhome\" element={<LoggedInHome />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/signuppage\" element={<Signup />} />\n            <Route path=\"/petspage\" element={<PetsPage />} />\n            <Route path=\"/todayswalkspage\" element={<TodaysWalksPage />} />\n            <Route path=\"/invoicespage\" element={<InvoicesPage />} />\n          </Routes>\n        </TodaysAppointmentsProvider>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <PageNavLinksNotLoggedIn />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/signuppage\" element={<Signup />} />\n        </Routes>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { UserProvider } from './context/user';\nimport { TodaysAppointmentsProvider } from './context/appointments';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <UserProvider>\n        <TodaysAppointmentsProvider>\n          <App />\n        </TodaysAppointmentsProvider>\n      </UserProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}